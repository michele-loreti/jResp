<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_51) on Tue Jun 25 15:13:37 CEST 2013 -->
<TITLE>
SecureHistory (Rice Pastry - API Specifications)
</TITLE>

<META NAME="date" CONTENT="2013-06-25">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="SecureHistory (Rice Pastry - API Specifications)";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/SecureHistory.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
Rice Pastry API</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/IndexEntryFactory.html" title="interface in org.mpisws.p2p.transport.peerreview.history"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/SecureHistoryFactory.html" title="interface in org.mpisws.p2p.transport.peerreview.history"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../../index.html?org/mpisws/p2p/transport/peerreview/history/SecureHistory.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SecureHistory.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.mpisws.p2p.transport.peerreview.history</FONT>
<BR>
Interface SecureHistory</H2>
<DL>
<DT><B>All Superinterfaces:</B> <DD><A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html" title="interface in org.mpisws.p2p.transport.peerreview">PeerReviewConstants</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/StatusConstants.html" title="interface in org.mpisws.p2p.transport.peerreview">StatusConstants</A></DD>
</DL>
<DL>
<DT><B>All Known Implementing Classes:</B> <DD><A HREF="../../../../../../org/mpisws/p2p/testing/transportlayer/peerreview/PRInconsistent1.ForkingSecureHistory.html" title="class in org.mpisws.p2p.testing.transportlayer.peerreview">PRInconsistent1.ForkingSecureHistory</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/SecureHistoryImpl.html" title="class in org.mpisws.p2p.transport.peerreview.history">SecureHistoryImpl</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public interface <B>SecureHistory</B><DT>extends <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html" title="interface in org.mpisws.p2p.transport.peerreview">PeerReviewConstants</A></DL>
</PRE>

<P>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.mpisws.p2p.transport.peerreview.PeerReviewConstants"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from interface org.mpisws.p2p.transport.peerreview.<A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html" title="interface in org.mpisws.p2p.transport.peerreview">PeerReviewConstants</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#AUTH_CACHE_INTERVAL">AUTH_CACHE_INTERVAL</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#CERT_MISSING">CERT_MISSING</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#CHAL_AUDIT">CHAL_AUDIT</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#CHAL_SEND">CHAL_SEND</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#DEFAULT_AUDIT_INTERVAL_MILLIS">DEFAULT_AUDIT_INTERVAL_MILLIS</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#DEFAULT_AUTH_PUSH_INTERVAL_MILLIS">DEFAULT_AUTH_PUSH_INTERVAL_MILLIS</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#DEFAULT_CHECKPOINT_INTERVAL_MILLIS">DEFAULT_CHECKPOINT_INTERVAL_MILLIS</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#DEFAULT_LOG_DOWNLOAD_TIMEOUT">DEFAULT_LOG_DOWNLOAD_TIMEOUT</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#DEFAULT_TIME_TOLERANCE_MILLIS">DEFAULT_TIME_TOLERANCE_MILLIS</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_ACK">EVT_ACK</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_CHECKPOINT">EVT_CHECKPOINT</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_CHOOSE_Q">EVT_CHOOSE_Q</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_CHOOSE_RAND">EVT_CHOOSE_RAND</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_INIT">EVT_INIT</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_MAX_RESERVED">EVT_MAX_RESERVED</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_MAX_SOCKET_EVT">EVT_MAX_SOCKET_EVT</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_MIN_SOCKET_EVT">EVT_MIN_SOCKET_EVT</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_RECV">EVT_RECV</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SEND">EVT_SEND</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SENDSIGN">EVT_SENDSIGN</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SIGN">EVT_SIGN</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SOCKET_CAN_READ">EVT_SOCKET_CAN_READ</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SOCKET_CAN_RW">EVT_SOCKET_CAN_RW</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SOCKET_CAN_WRITE">EVT_SOCKET_CAN_WRITE</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SOCKET_CLOSE">EVT_SOCKET_CLOSE</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SOCKET_CLOSED">EVT_SOCKET_CLOSED</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SOCKET_EXCEPTION">EVT_SOCKET_EXCEPTION</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SOCKET_OPEN_INCOMING">EVT_SOCKET_OPEN_INCOMING</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SOCKET_OPEN_OUTGOING">EVT_SOCKET_OPEN_OUTGOING</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SOCKET_OPENED_OUTGOING">EVT_SOCKET_OPENED_OUTGOING</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SOCKET_READ">EVT_SOCKET_READ</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SOCKET_SHUTDOWN_OUTPUT">EVT_SOCKET_SHUTDOWN_OUTPUT</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SOCKET_WRITE">EVT_SOCKET_WRITE</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_VRF">EVT_VRF</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EX_TYPE_ClosedChannel">EX_TYPE_ClosedChannel</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EX_TYPE_IO">EX_TYPE_IO</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EX_TYPE_Unknown">EX_TYPE_Unknown</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#FLAG_FULL_MESSAGES_ALL">FLAG_FULL_MESSAGES_ALL</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#FLAG_FULL_MESSAGES_SENDER">FLAG_FULL_MESSAGES_SENDER</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#FLAG_INCLUDE_CHECKPOINT">FLAG_INCLUDE_CHECKPOINT</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#INVALID">INVALID</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#INVESTIGATION_INTERVAL_MILLIS">INVESTIGATION_INTERVAL_MILLIS</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MAINTENANCE_INTERVAL_MILLIS">MAINTENANCE_INTERVAL_MILLIS</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MAX_ACTIVE_AUDITS">MAX_ACTIVE_AUDITS</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MAX_ACTIVE_INVESTIGATIONS">MAX_ACTIVE_INVESTIGATIONS</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MAX_ENTRIES_BETWEEN_CHECKPOINTS">MAX_ENTRIES_BETWEEN_CHECKPOINTS</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MAX_STATUS_INFO">MAX_STATUS_INFO</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MAX_WITNESSED_NODES">MAX_WITNESSED_NODES</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MSG_ACCUSATION">MSG_ACCUSATION</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MSG_ACK">MSG_ACK</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MSG_AUTHPUSH">MSG_AUTHPUSH</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MSG_AUTHREQ">MSG_AUTHREQ</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MSG_AUTHRESP">MSG_AUTHRESP</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MSG_CHALLENGE">MSG_CHALLENGE</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MSG_RESPONSE">MSG_RESPONSE</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MSG_USERDATA">MSG_USERDATA</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MSG_USERDGRAM">MSG_USERDGRAM</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#NO_CERTIFICATE">NO_CERTIFICATE</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#PROGRESS_INTERVAL_MILLIS">PROGRESS_INTERVAL_MILLIS</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#PROOF_INCONSISTENT">PROOF_INCONSISTENT</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#PROOF_NONCONFORMANT">PROOF_NONCONFORMANT</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#RESP_AUDIT">RESP_AUDIT</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#RESP_SEND">RESP_SEND</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#SIGNATURE_BAD">SIGNATURE_BAD</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#SIGNATURE_OK">SIGNATURE_OK</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#STATE_SEND_AUDIT">STATE_SEND_AUDIT</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#STATE_WAIT_FOR_LOG">STATE_WAIT_FOR_LOG</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#TI_AUTH_PUSH">TI_AUTH_PUSH</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#TI_CHECKPOINT">TI_CHECKPOINT</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#TI_MAINTENANCE">TI_MAINTENANCE</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#TI_MAKE_PROGRESS">TI_MAKE_PROGRESS</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#TI_MAX_RESERVED">TI_MAX_RESERVED</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#TI_START_AUDITS">TI_START_AUDITS</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#TI_STATUS_INFO">TI_STATUS_INFO</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#VALID">VALID</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.mpisws.p2p.transport.peerreview.StatusConstants"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from interface org.mpisws.p2p.transport.peerreview.<A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/StatusConstants.html" title="interface in org.mpisws.p2p.transport.peerreview">StatusConstants</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/StatusConstants.html#STATUS_EXPOSED">STATUS_EXPOSED</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/StatusConstants.html#STATUS_SUSPECTED">STATUS_SUSPECTED</A>, <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/StatusConstants.html#STATUS_TRUSTED">STATUS_TRUSTED</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/SecureHistory.html#appendEntry(short, boolean, java.nio.ByteBuffer...)">appendEntry</A></B>(short&nbsp;type,
            boolean&nbsp;storeFullEntry,
            java.nio.ByteBuffer...&nbsp;entry)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Appends a new entry to the log.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/SecureHistory.html#appendHash(short, byte[])">appendHash</A></B>(short&nbsp;type,
           byte[]&nbsp;hash)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Append a new hashed entry to the log.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/SecureHistory.html#appendSnippetToHistory(org.mpisws.p2p.transport.peerreview.audit.LogSnippet)">appendSnippetToHistory</A></B>(<A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/audit/LogSnippet.html" title="class in org.mpisws.p2p.transport.peerreview.audit">LogSnippet</A>&nbsp;snippet)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/SecureHistory.html#close()">close</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The destructor.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/SecureHistory.html#findLastEntry(short[], long)">findLastEntry</A></B>(short[]&nbsp;types,
              long&nbsp;maxSeq)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Find the most recent entry whose type is in the specified set.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/SecureHistory.html#findSeq(long)">findSeq</A></B>(long&nbsp;seq)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/SecureHistory.html#findSeqOrHigher(long, boolean)">findSeqOrHigher</A></B>(long&nbsp;seq,
                boolean&nbsp;allowHigher)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Look up a given sequence number, or the first sequence number that is 
 not lower than a given number.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/SecureHistory.html#getBaseSeq()">getBaseSeq</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/SecureHistory.html#getEntry(org.mpisws.p2p.transport.peerreview.history.IndexEntry, int)">getEntry</A></B>(<A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/IndexEntry.html" title="class in org.mpisws.p2p.transport.peerreview.history">IndexEntry</A>&nbsp;ie,
         int&nbsp;maxSizeToRead)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/SecureHistory.html#getEntry(long, int)">getEntry</A></B>(long&nbsp;idx,
         int&nbsp;maxSizeToRead)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the content of a log entry, specified by its record number</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/SecureHistory.html#getLastSeq()">getLastSeq</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/SecureHistory.html#getNumEntries()">getNumEntries</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/HashSeq.html" title="class in org.mpisws.p2p.transport.peerreview.history">HashSeq</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/SecureHistory.html#getTopLevelEntry()">getTopLevelEntry</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the node hash and the sequence number of the most recent log entry</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/audit/LogSnippet.html" title="class in org.mpisws.p2p.transport.peerreview.audit">LogSnippet</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/SecureHistory.html#serializeRange(long, long, org.mpisws.p2p.transport.peerreview.history.HashPolicy)">serializeRange</A></B>(long&nbsp;idxFrom,
               long&nbsp;idxTo,
               <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/HashPolicy.html" title="interface in org.mpisws.p2p.transport.peerreview.history">HashPolicy</A>&nbsp;hashPolicy)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Serialize a given range of entries, and write the result to the specified file.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/SecureHistory.html#setNextSeq(long)">setNextSeq</A></B>(long&nbsp;nextSeq)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the next sequence number to be used.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/IndexEntry.html" title="class in org.mpisws.p2p.transport.peerreview.history">IndexEntry</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/SecureHistory.html#statEntry(long)">statEntry</A></B>(long&nbsp;idx)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Retrieve information about a given record</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/SecureHistory.html#upgradeHashedEntry(int, java.nio.ByteBuffer)">upgradeHashedEntry</A></B>(int&nbsp;idx,
                   java.nio.ByteBuffer&nbsp;entry)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If the log already contains an entry in 'hashed' form and we learn the actual
 contents later, this function is called.</TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="getNumEntries()"><!-- --></A><H3>
getNumEntries</H3>
<PRE>
long <B>getNumEntries</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getBaseSeq()"><!-- --></A><H3>
getBaseSeq</H3>
<PRE>
long <B>getBaseSeq</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getLastSeq()"><!-- --></A><H3>
getLastSeq</H3>
<PRE>
long <B>getLastSeq</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getTopLevelEntry()"><!-- --></A><H3>
getTopLevelEntry</H3>
<PRE>
<A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/HashSeq.html" title="class in org.mpisws.p2p.transport.peerreview.history">HashSeq</A> <B>getTopLevelEntry</B>()</PRE>
<DL>
<DD>Returns the node hash and the sequence number of the most recent log entry
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="appendEntry(short, boolean, java.nio.ByteBuffer...)"><!-- --></A><H3>
appendEntry</H3>
<PRE>
void <B>appendEntry</B>(short&nbsp;type,
                 boolean&nbsp;storeFullEntry,
                 java.nio.ByteBuffer...&nbsp;entry)
                 throws java.io.IOException</PRE>
<DL>
<DD>Appends a new entry to the log. If 'storeFullEntry' is false, only the hash of the
 entry is stored. If 'header' is not NULL, the log entry is formed by concatenating
 'header' and 'entry'; otherwise, only 'entry' is used. 
 
 Takes an ordered list of ByteBuffers to append
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="appendHash(short, byte[])"><!-- --></A><H3>
appendHash</H3>
<PRE>
void <B>appendHash</B>(short&nbsp;type,
                byte[]&nbsp;hash)
                throws java.io.IOException</PRE>
<DL>
<DD>Append a new hashed entry to the log. Unlike appendEntry(), this only keeps
 the content type, sequence number, and hash values. No entry is made in
 the data file.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="setNextSeq(long)"><!-- --></A><H3>
setNextSeq</H3>
<PRE>
boolean <B>setNextSeq</B>(long&nbsp;nextSeq)</PRE>
<DL>
<DD>Sets the next sequence number to be used. The PeerReview library typically
 uses the format <xxxx...xxxyyyy>, where X is a timestamp in microseconds
 and Y a sequence number. The sequence numbers need not be contigious
 (and usually aren't)
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="close()"><!-- --></A><H3>
close</H3>
<PRE>
void <B>close</B>()
           throws java.io.IOException</PRE>
<DL>
<DD>The destructor.  Closes the file handles.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="findSeq(long)"><!-- --></A><H3>
findSeq</H3>
<PRE>
long <B>findSeq</B>(long&nbsp;seq)
             throws java.io.IOException</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="findSeqOrHigher(long, boolean)"><!-- --></A><H3>
findSeqOrHigher</H3>
<PRE>
long <B>findSeqOrHigher</B>(long&nbsp;seq,
                     boolean&nbsp;allowHigher)
                     throws java.io.IOException</PRE>
<DL>
<DD>Look up a given sequence number, or the first sequence number that is 
 not lower than a given number. The return value is the number of
 the corresponding record in the index file, or -1 if no matching
 record was found.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="serializeRange(long, long, org.mpisws.p2p.transport.peerreview.history.HashPolicy)"><!-- --></A><H3>
serializeRange</H3>
<PRE>
<A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/audit/LogSnippet.html" title="class in org.mpisws.p2p.transport.peerreview.audit">LogSnippet</A> <B>serializeRange</B>(long&nbsp;idxFrom,
                          long&nbsp;idxTo,
                          <A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/HashPolicy.html" title="interface in org.mpisws.p2p.transport.peerreview.history">HashPolicy</A>&nbsp;hashPolicy)
                          throws java.io.IOException</PRE>
<DL>
<DD>Serialize a given range of entries, and write the result to the specified file.
 This is used when we need to send a portion of our log to some other node,
 e.g. during an audit. The format of the serialized log segment is as follows:
     1. base hash value (size depends on hash function)
     2. entry type (1 byte)
     3. entry size in bytes (1 byte); 0x00=entry is hashed; 0xFF=16-bit size follows
     4. entry content (size as specified; omitted if entry is hashed)
     5. difference to next sequence number (1 byte)
           0x00: increment by one
           0xFF: 64-bit sequence number follows
           Otherwise:  Round down to nearest multiple of 1000, then add specified
               value times 1000
     6. repeat 2-5 as often as necessary; 5 is omitted on last entry.4
 Note that the idxFrom and idxTo arguments are record numbers, NOT sequence numbers.
 Use findSeqOrHigher() to get these if only sequence numbers are known.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="statEntry(long)"><!-- --></A><H3>
statEntry</H3>
<PRE>
<A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/IndexEntry.html" title="class in org.mpisws.p2p.transport.peerreview.history">IndexEntry</A> <B>statEntry</B>(long&nbsp;idx)
                     throws java.io.IOException</PRE>
<DL>
<DD>Retrieve information about a given record
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>idx</CODE> - the index you are interested in
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="getEntry(long, int)"><!-- --></A><H3>
getEntry</H3>
<PRE>
byte[] <B>getEntry</B>(long&nbsp;idx,
                int&nbsp;maxSizeToRead)
                throws java.io.IOException</PRE>
<DL>
<DD>Get the content of a log entry, specified by its record number
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="getEntry(org.mpisws.p2p.transport.peerreview.history.IndexEntry, int)"><!-- --></A><H3>
getEntry</H3>
<PRE>
byte[] <B>getEntry</B>(<A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/IndexEntry.html" title="class in org.mpisws.p2p.transport.peerreview.history">IndexEntry</A>&nbsp;ie,
                int&nbsp;maxSizeToRead)
                throws java.io.IOException</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="upgradeHashedEntry(int, java.nio.ByteBuffer)"><!-- --></A><H3>
upgradeHashedEntry</H3>
<PRE>
boolean <B>upgradeHashedEntry</B>(int&nbsp;idx,
                           java.nio.ByteBuffer&nbsp;entry)
                           throws java.io.IOException</PRE>
<DL>
<DD>If the log already contains an entry in 'hashed' form and we learn the actual
 contents later, this function is called.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="findLastEntry(short[], long)"><!-- --></A><H3>
findLastEntry</H3>
<PRE>
long <B>findLastEntry</B>(short[]&nbsp;types,
                   long&nbsp;maxSeq)
                   throws java.io.IOException</PRE>
<DL>
<DD>Find the most recent entry whose type is in the specified set. Useful e.g. for
 locating the last CHECKPOINT or INIT entry.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="appendSnippetToHistory(org.mpisws.p2p.transport.peerreview.audit.LogSnippet)"><!-- --></A><H3>
appendSnippetToHistory</H3>
<PRE>
void <B>appendSnippetToHistory</B>(<A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/audit/LogSnippet.html" title="class in org.mpisws.p2p.transport.peerreview.audit">LogSnippet</A>&nbsp;snippet)
                            throws java.io.IOException</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/SecureHistory.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
Rice Pastry API</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/IndexEntryFactory.html" title="interface in org.mpisws.p2p.transport.peerreview.history"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../../../org/mpisws/p2p/transport/peerreview/history/SecureHistoryFactory.html" title="interface in org.mpisws.p2p.transport.peerreview.history"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../../index.html?org/mpisws/p2p/transport/peerreview/history/SecureHistory.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SecureHistory.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>
<i>Copyright &#169; 2001-2005 - Rice Pastry.</i>
</BODY>
</HTML>
