<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_51) on Tue Jun 25 15:13:40 CEST 2013 -->
<TITLE>
ReplayVerifier (Rice Pastry - API Specifications)
</TITLE>

<META NAME="date" CONTENT="2013-06-25">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="ReplayVerifier (Rice Pastry - API Specifications)";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/ReplayVerifier.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
Rice Pastry API</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplaySocket.html" title="class in org.mpisws.p2p.transport.peerreview.replay.playback"><B>PREV CLASS</B></A>&nbsp;
&nbsp;NEXT CLASS</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../../../index.html?org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="ReplayVerifier.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.mpisws.p2p.transport.peerreview.replay.playback</FONT>
<BR>
Class ReplayVerifier&lt;Identifier&gt;</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../../../../../resources/inherit.gif" ALT="extended by "><B>org.mpisws.p2p.transport.peerreview.replay.playback.ReplayVerifier&lt;Identifier&gt;</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html" title="interface in org.mpisws.p2p.transport.peerreview">PeerReviewConstants</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/Verifier.html" title="interface in org.mpisws.p2p.transport.peerreview.replay">Verifier</A>&lt;Identifier&gt;, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/StatusConstants.html" title="interface in org.mpisws.p2p.transport.peerreview">StatusConstants</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/TransportLayer.html" title="interface in org.mpisws.p2p.transport">TransportLayer</A>&lt;Identifier,java.nio.ByteBuffer&gt;, <A HREF="../../../../../../../rice/Destructable.html" title="interface in rice">Destructable</A></DD>
</DL>
<DL>
<DT><B>Direct Known Subclasses:</B> <DD><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayLayer.html" title="class in org.mpisws.p2p.transport.peerreview.replay.playback">ReplayLayer</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public abstract class <B>ReplayVerifier&lt;Identifier&gt;</B><DT>extends java.lang.Object<DT>implements <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/Verifier.html" title="interface in org.mpisws.p2p.transport.peerreview.replay">Verifier</A>&lt;Identifier&gt;, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html" title="interface in org.mpisws.p2p.transport.peerreview">PeerReviewConstants</A></DL>
</PRE>

<P>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/history/HashProvider.html" title="interface in org.mpisws.p2p.transport.peerreview.history">HashProvider</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#hashProv">hashProv</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/history/SecureHistory.html" title="interface in org.mpisws.p2p.transport.peerreview.history">SecureHistory</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#history">history</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html" title="type parameter in ReplayVerifier">Identifier</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#localHandle">localHandle</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../../../../../../../rice/environment/logging/Logger.html" title="class in rice.environment.logging">Logger</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#logger">logger</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../../../../../../../org/mpisws/p2p/transport/util/Serializer.html" title="interface in org.mpisws.p2p.transport.util">Serializer</A>&lt;<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html" title="type parameter in ReplayVerifier">Identifier</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#serializer">serializer</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.mpisws.p2p.transport.peerreview.PeerReviewConstants"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from interface org.mpisws.p2p.transport.peerreview.<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html" title="interface in org.mpisws.p2p.transport.peerreview">PeerReviewConstants</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#AUTH_CACHE_INTERVAL">AUTH_CACHE_INTERVAL</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#CERT_MISSING">CERT_MISSING</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#CHAL_AUDIT">CHAL_AUDIT</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#CHAL_SEND">CHAL_SEND</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#DEFAULT_AUDIT_INTERVAL_MILLIS">DEFAULT_AUDIT_INTERVAL_MILLIS</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#DEFAULT_AUTH_PUSH_INTERVAL_MILLIS">DEFAULT_AUTH_PUSH_INTERVAL_MILLIS</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#DEFAULT_CHECKPOINT_INTERVAL_MILLIS">DEFAULT_CHECKPOINT_INTERVAL_MILLIS</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#DEFAULT_LOG_DOWNLOAD_TIMEOUT">DEFAULT_LOG_DOWNLOAD_TIMEOUT</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#DEFAULT_TIME_TOLERANCE_MILLIS">DEFAULT_TIME_TOLERANCE_MILLIS</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_ACK">EVT_ACK</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_CHECKPOINT">EVT_CHECKPOINT</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_CHOOSE_Q">EVT_CHOOSE_Q</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_CHOOSE_RAND">EVT_CHOOSE_RAND</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_INIT">EVT_INIT</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_MAX_RESERVED">EVT_MAX_RESERVED</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_MAX_SOCKET_EVT">EVT_MAX_SOCKET_EVT</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_MIN_SOCKET_EVT">EVT_MIN_SOCKET_EVT</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_RECV">EVT_RECV</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SEND">EVT_SEND</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SENDSIGN">EVT_SENDSIGN</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SIGN">EVT_SIGN</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SOCKET_CAN_READ">EVT_SOCKET_CAN_READ</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SOCKET_CAN_RW">EVT_SOCKET_CAN_RW</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SOCKET_CAN_WRITE">EVT_SOCKET_CAN_WRITE</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SOCKET_CLOSE">EVT_SOCKET_CLOSE</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SOCKET_CLOSED">EVT_SOCKET_CLOSED</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SOCKET_EXCEPTION">EVT_SOCKET_EXCEPTION</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SOCKET_OPEN_INCOMING">EVT_SOCKET_OPEN_INCOMING</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SOCKET_OPEN_OUTGOING">EVT_SOCKET_OPEN_OUTGOING</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SOCKET_OPENED_OUTGOING">EVT_SOCKET_OPENED_OUTGOING</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SOCKET_READ">EVT_SOCKET_READ</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SOCKET_SHUTDOWN_OUTPUT">EVT_SOCKET_SHUTDOWN_OUTPUT</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_SOCKET_WRITE">EVT_SOCKET_WRITE</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EVT_VRF">EVT_VRF</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EX_TYPE_ClosedChannel">EX_TYPE_ClosedChannel</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EX_TYPE_IO">EX_TYPE_IO</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#EX_TYPE_Unknown">EX_TYPE_Unknown</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#FLAG_FULL_MESSAGES_ALL">FLAG_FULL_MESSAGES_ALL</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#FLAG_FULL_MESSAGES_SENDER">FLAG_FULL_MESSAGES_SENDER</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#FLAG_INCLUDE_CHECKPOINT">FLAG_INCLUDE_CHECKPOINT</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#INVALID">INVALID</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#INVESTIGATION_INTERVAL_MILLIS">INVESTIGATION_INTERVAL_MILLIS</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MAINTENANCE_INTERVAL_MILLIS">MAINTENANCE_INTERVAL_MILLIS</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MAX_ACTIVE_AUDITS">MAX_ACTIVE_AUDITS</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MAX_ACTIVE_INVESTIGATIONS">MAX_ACTIVE_INVESTIGATIONS</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MAX_ENTRIES_BETWEEN_CHECKPOINTS">MAX_ENTRIES_BETWEEN_CHECKPOINTS</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MAX_STATUS_INFO">MAX_STATUS_INFO</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MAX_WITNESSED_NODES">MAX_WITNESSED_NODES</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MSG_ACCUSATION">MSG_ACCUSATION</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MSG_ACK">MSG_ACK</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MSG_AUTHPUSH">MSG_AUTHPUSH</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MSG_AUTHREQ">MSG_AUTHREQ</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MSG_AUTHRESP">MSG_AUTHRESP</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MSG_CHALLENGE">MSG_CHALLENGE</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MSG_RESPONSE">MSG_RESPONSE</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MSG_USERDATA">MSG_USERDATA</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#MSG_USERDGRAM">MSG_USERDGRAM</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#NO_CERTIFICATE">NO_CERTIFICATE</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#PROGRESS_INTERVAL_MILLIS">PROGRESS_INTERVAL_MILLIS</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#PROOF_INCONSISTENT">PROOF_INCONSISTENT</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#PROOF_NONCONFORMANT">PROOF_NONCONFORMANT</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#RESP_AUDIT">RESP_AUDIT</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#RESP_SEND">RESP_SEND</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#SIGNATURE_BAD">SIGNATURE_BAD</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#SIGNATURE_OK">SIGNATURE_OK</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#STATE_SEND_AUDIT">STATE_SEND_AUDIT</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#STATE_WAIT_FOR_LOG">STATE_WAIT_FOR_LOG</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#TI_AUTH_PUSH">TI_AUTH_PUSH</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#TI_CHECKPOINT">TI_CHECKPOINT</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#TI_MAINTENANCE">TI_MAINTENANCE</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#TI_MAKE_PROGRESS">TI_MAKE_PROGRESS</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#TI_MAX_RESERVED">TI_MAX_RESERVED</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#TI_START_AUDITS">TI_START_AUDITS</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#TI_STATUS_INFO">TI_STATUS_INFO</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewConstants.html#VALID">VALID</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.mpisws.p2p.transport.peerreview.StatusConstants"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from interface org.mpisws.p2p.transport.peerreview.<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/StatusConstants.html" title="interface in org.mpisws.p2p.transport.peerreview">StatusConstants</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/StatusConstants.html#STATUS_EXPOSED">STATUS_EXPOSED</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/StatusConstants.html#STATUS_SUSPECTED">STATUS_SUSPECTED</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/StatusConstants.html#STATUS_TRUSTED">STATUS_TRUSTED</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#ReplayVerifier(org.mpisws.p2p.transport.util.Serializer, org.mpisws.p2p.transport.peerreview.history.HashProvider, org.mpisws.p2p.transport.peerreview.history.SecureHistory, Identifier, short, short, int, rice.environment.logging.Logger)">ReplayVerifier</A></B>(<A HREF="../../../../../../../org/mpisws/p2p/transport/util/Serializer.html" title="interface in org.mpisws.p2p.transport.util">Serializer</A>&lt;<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html" title="type parameter in ReplayVerifier">Identifier</A>&gt;&nbsp;serializer,
               <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/history/HashProvider.html" title="interface in org.mpisws.p2p.transport.peerreview.history">HashProvider</A>&nbsp;hashProv,
               <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/history/SecureHistory.html" title="interface in org.mpisws.p2p.transport.peerreview.history">SecureHistory</A>&nbsp;history,
               <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html" title="type parameter in ReplayVerifier">Identifier</A>&nbsp;localHandle,
               short&nbsp;signatureSizeBytes,
               short&nbsp;hashSizeBytes,
               int&nbsp;firstEntryToReplay,
               <A HREF="../../../../../../../rice/environment/logging/Logger.html" title="class in rice.environment.logging">Logger</A>&nbsp;logger)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#close(int)">close</A></B>(int&nbsp;socketId)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;java.io.IOException</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#deserializeException(rice.p2p.commonapi.rawserialization.InputBuffer)">deserializeException</A></B>(<A HREF="../../../../../../../rice/p2p/commonapi/rawserialization/InputBuffer.html" title="interface in rice.p2p.commonapi.rawserialization">InputBuffer</A>&nbsp;nextEvent)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#fetchNextEvent()">fetchNextEvent</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fetch the next log entry, or set the EOF flag</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#generatedSocketException(int, java.io.IOException)">generatedSocketException</A></B>(int&nbsp;socketId,
                         java.io.IOException&nbsp;ioe)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/history/IndexEntry.html" title="class in org.mpisws.p2p.transport.peerreview.history">IndexEntry</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#getNextEvent()">getNextEvent</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#getNextEventTime()">getNextEventTime</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected abstract &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#incomingSocket(Identifier, int)">incomingSocket</A></B>(<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html" title="type parameter in ReplayVerifier">Identifier</A>&nbsp;from,
               int&nbsp;socketId)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Callback when a socket comes in from a remote node.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#isSuccess()">isSuccess</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#makeProgress()">makeProgress</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This is called by the Audit protocol to make another replay step; it returns true
 if further calls are necessary, and false if the replay has finished.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#openSocket(Identifier)">openSocket</A></B>(<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html" title="type parameter in ReplayVerifier">Identifier</A>&nbsp;target)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the new socketId</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#readSocket(int, java.nio.ByteBuffer)">readSocket</A></B>(int&nbsp;socketId,
           java.nio.ByteBuffer&nbsp;dst)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the bytes read.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected abstract &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#receive(Identifier, java.nio.ByteBuffer)">receive</A></B>(<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html" title="type parameter in ReplayVerifier">Identifier</A>&nbsp;from,
        java.nio.ByteBuffer&nbsp;msg)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Callback when a message has arrived.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#registerEvent(org.mpisws.p2p.transport.peerreview.replay.EventCallback, short...)">registerEvent</A></B>(<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/EventCallback.html" title="interface in org.mpisws.p2p.transport.peerreview.replay">EventCallback</A>&nbsp;callback,
              short...&nbsp;eventType)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This binds specific event types to one of the handlers</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#registerEvent(org.mpisws.p2p.transport.peerreview.replay.EventCallback, short)">registerEvent</A></B>(<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/EventCallback.html" title="interface in org.mpisws.p2p.transport.peerreview.replay">EventCallback</A>&nbsp;callback,
              short&nbsp;eventType)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#send(Identifier, java.nio.ByteBuffer, int)">send</A></B>(<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html" title="type parameter in ReplayVerifier">Identifier</A>&nbsp;target,
     java.nio.ByteBuffer&nbsp;message,
     int&nbsp;relevantLen)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Called by the state machine when it wants to send a message</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#setApplication(org.mpisws.p2p.transport.peerreview.PeerReviewCallback)">setApplication</A></B>(<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewCallback.html" title="interface in org.mpisws.p2p.transport.peerreview">PeerReviewCallback</A>&nbsp;app)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#shutdownOutput(int)">shutdownOutput</A></B>(int&nbsp;socketId)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected abstract &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#socketException(int, java.io.IOException)">socketException</A></B>(int&nbsp;socketId,
                java.io.IOException&nbsp;ioe)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected abstract &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#socketIO(int, boolean, boolean)">socketIO</A></B>(int&nbsp;socketId,
         boolean&nbsp;canRead,
         boolean&nbsp;canWrite)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Callback when a socket is ready to read/write.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected abstract &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#socketOpened(int)">socketOpened</A></B>(int&nbsp;socketId)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#verifiedOK()">verifiedOK</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html#writeSocket(int, java.nio.ByteBuffer)">writeSocket</A></B>(int&nbsp;socketId,
            java.nio.ByteBuffer&nbsp;src)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the bytes written.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.mpisws.p2p.transport.peerreview.replay.Verifier"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from interface org.mpisws.p2p.transport.peerreview.replay.<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/Verifier.html" title="interface in org.mpisws.p2p.transport.peerreview.replay">Verifier</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/Verifier.html#getEnvironment()">getEnvironment</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.mpisws.p2p.transport.TransportLayer"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from interface org.mpisws.p2p.transport.<A HREF="../../../../../../../org/mpisws/p2p/transport/TransportLayer.html" title="interface in org.mpisws.p2p.transport">TransportLayer</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../../../org/mpisws/p2p/transport/TransportLayer.html#acceptMessages(boolean)">acceptMessages</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/TransportLayer.html#acceptSockets(boolean)">acceptSockets</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/TransportLayer.html#getLocalIdentifier()">getLocalIdentifier</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/TransportLayer.html#openSocket(Identifier, org.mpisws.p2p.transport.SocketCallback, java.util.Map)">openSocket</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/TransportLayer.html#sendMessage(Identifier, MessageType, org.mpisws.p2p.transport.MessageCallback, java.util.Map)">sendMessage</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/TransportLayer.html#setCallback(org.mpisws.p2p.transport.TransportLayerCallback)">setCallback</A>, <A HREF="../../../../../../../org/mpisws/p2p/transport/TransportLayer.html#setErrorHandler(org.mpisws.p2p.transport.ErrorHandler)">setErrorHandler</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_rice.Destructable"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from interface rice.<A HREF="../../../../../../../rice/Destructable.html" title="interface in rice">Destructable</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../../../rice/Destructable.html#destroy()">destroy</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="localHandle"><!-- --></A><H3>
localHandle</H3>
<PRE>
protected <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html" title="type parameter in ReplayVerifier">Identifier</A> <B>localHandle</B></PRE>
<DL>
<DL>
</DL>
</DL>
<HR>

<A NAME="history"><!-- --></A><H3>
history</H3>
<PRE>
protected <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/history/SecureHistory.html" title="interface in org.mpisws.p2p.transport.peerreview.history">SecureHistory</A> <B>history</B></PRE>
<DL>
<DL>
</DL>
</DL>
<HR>

<A NAME="logger"><!-- --></A><H3>
logger</H3>
<PRE>
protected <A HREF="../../../../../../../rice/environment/logging/Logger.html" title="class in rice.environment.logging">Logger</A> <B>logger</B></PRE>
<DL>
<DL>
</DL>
</DL>
<HR>

<A NAME="serializer"><!-- --></A><H3>
serializer</H3>
<PRE>
protected <A HREF="../../../../../../../org/mpisws/p2p/transport/util/Serializer.html" title="interface in org.mpisws.p2p.transport.util">Serializer</A>&lt;<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html" title="type parameter in ReplayVerifier">Identifier</A>&gt; <B>serializer</B></PRE>
<DL>
<DL>
</DL>
</DL>
<HR>

<A NAME="hashProv"><!-- --></A><H3>
hashProv</H3>
<PRE>
protected <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/history/HashProvider.html" title="interface in org.mpisws.p2p.transport.peerreview.history">HashProvider</A> <B>hashProv</B></PRE>
<DL>
<DL>
</DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="ReplayVerifier(org.mpisws.p2p.transport.util.Serializer,org.mpisws.p2p.transport.peerreview.history.HashProvider,org.mpisws.p2p.transport.peerreview.history.SecureHistory,java.lang.Object,short,short,int,rice.environment.logging.Logger)"><!-- --></A><A NAME="ReplayVerifier(org.mpisws.p2p.transport.util.Serializer, org.mpisws.p2p.transport.peerreview.history.HashProvider, org.mpisws.p2p.transport.peerreview.history.SecureHistory, Identifier, short, short, int, rice.environment.logging.Logger)"><!-- --></A><H3>
ReplayVerifier</H3>
<PRE>
public <B>ReplayVerifier</B>(<A HREF="../../../../../../../org/mpisws/p2p/transport/util/Serializer.html" title="interface in org.mpisws.p2p.transport.util">Serializer</A>&lt;<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html" title="type parameter in ReplayVerifier">Identifier</A>&gt;&nbsp;serializer,
                      <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/history/HashProvider.html" title="interface in org.mpisws.p2p.transport.peerreview.history">HashProvider</A>&nbsp;hashProv,
                      <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/history/SecureHistory.html" title="interface in org.mpisws.p2p.transport.peerreview.history">SecureHistory</A>&nbsp;history,
                      <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html" title="type parameter in ReplayVerifier">Identifier</A>&nbsp;localHandle,
                      short&nbsp;signatureSizeBytes,
                      short&nbsp;hashSizeBytes,
                      int&nbsp;firstEntryToReplay,
                      <A HREF="../../../../../../../rice/environment/logging/Logger.html" title="class in rice.environment.logging">Logger</A>&nbsp;logger)
               throws java.io.IOException</PRE>
<DL>
<DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="verifiedOK()"><!-- --></A><H3>
verifiedOK</H3>
<PRE>
public boolean <B>verifiedOK</B>()</PRE>
<DL>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/Verifier.html#verifiedOK()">verifiedOK</A></CODE> in interface <CODE><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/Verifier.html" title="interface in org.mpisws.p2p.transport.peerreview.replay">Verifier</A>&lt;<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html" title="type parameter in ReplayVerifier">Identifier</A>&gt;</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getNextEvent()"><!-- --></A><H3>
getNextEvent</H3>
<PRE>
public <A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/history/IndexEntry.html" title="class in org.mpisws.p2p.transport.peerreview.history">IndexEntry</A> <B>getNextEvent</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="receive(java.lang.Object,java.nio.ByteBuffer)"><!-- --></A><A NAME="receive(Identifier, java.nio.ByteBuffer)"><!-- --></A><H3>
receive</H3>
<PRE>
protected abstract void <B>receive</B>(<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html" title="type parameter in ReplayVerifier">Identifier</A>&nbsp;from,
                                java.nio.ByteBuffer&nbsp;msg)
                         throws java.io.IOException</PRE>
<DL>
<DD>Callback when a message has arrived.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>from</CODE> - <DD><CODE>msg</CODE> - 
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="incomingSocket(java.lang.Object,int)"><!-- --></A><A NAME="incomingSocket(Identifier, int)"><!-- --></A><H3>
incomingSocket</H3>
<PRE>
protected abstract void <B>incomingSocket</B>(<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html" title="type parameter in ReplayVerifier">Identifier</A>&nbsp;from,
                                       int&nbsp;socketId)
                                throws java.io.IOException</PRE>
<DL>
<DD>Callback when a socket comes in from a remote node.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>from</CODE> - <DD><CODE>socketId</CODE> - 
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="socketIO(int, boolean, boolean)"><!-- --></A><H3>
socketIO</H3>
<PRE>
protected abstract void <B>socketIO</B>(int&nbsp;socketId,
                                 boolean&nbsp;canRead,
                                 boolean&nbsp;canWrite)
                          throws java.io.IOException</PRE>
<DL>
<DD>Callback when a socket is ready to read/write.
 
 Note that the simulated node should have already registered for this event, even though it is
 not logged.  If the node is not registred for the event, it is an error.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>socketId</CODE> - <DD><CODE>canRead</CODE> - <DD><CODE>canWrite</CODE> - 
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="socketOpened(int)"><!-- --></A><H3>
socketOpened</H3>
<PRE>
protected abstract void <B>socketOpened</B>(int&nbsp;socketId)
                              throws java.io.IOException</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="socketException(int, java.io.IOException)"><!-- --></A><H3>
socketException</H3>
<PRE>
protected abstract void <B>socketException</B>(int&nbsp;socketId,
                                        java.io.IOException&nbsp;ioe)
                                 throws java.io.IOException</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="setApplication(org.mpisws.p2p.transport.peerreview.PeerReviewCallback)"><!-- --></A><H3>
setApplication</H3>
<PRE>
public void <B>setApplication</B>(<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/PeerReviewCallback.html" title="interface in org.mpisws.p2p.transport.peerreview">PeerReviewCallback</A>&nbsp;app)</PRE>
<DL>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/Verifier.html#setApplication(org.mpisws.p2p.transport.peerreview.PeerReviewCallback)">setApplication</A></CODE> in interface <CODE><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/Verifier.html" title="interface in org.mpisws.p2p.transport.peerreview.replay">Verifier</A>&lt;<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html" title="type parameter in ReplayVerifier">Identifier</A>&gt;</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="fetchNextEvent()"><!-- --></A><H3>
fetchNextEvent</H3>
<PRE>
protected void <B>fetchNextEvent</B>()</PRE>
<DL>
<DD>Fetch the next log entry, or set the EOF flag
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="send(java.lang.Object,java.nio.ByteBuffer,int)"><!-- --></A><A NAME="send(Identifier, java.nio.ByteBuffer, int)"><!-- --></A><H3>
send</H3>
<PRE>
protected void <B>send</B>(<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html" title="type parameter in ReplayVerifier">Identifier</A>&nbsp;target,
                    java.nio.ByteBuffer&nbsp;message,
                    int&nbsp;relevantLen)
             throws java.io.IOException</PRE>
<DL>
<DD>Called by the state machine when it wants to send a message
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="openSocket(java.lang.Object)"><!-- --></A><A NAME="openSocket(Identifier)"><!-- --></A><H3>
openSocket</H3>
<PRE>
public int <B>openSocket</B>(<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html" title="type parameter in ReplayVerifier">Identifier</A>&nbsp;target)
               throws java.io.IOException</PRE>
<DL>
<DD>Return the new socketId
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>i</CODE> - 
<DT><B>Returns:</B><DD>the new socketId, Integer.MIN_VALUE for an error
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="readSocket(int, java.nio.ByteBuffer)"><!-- --></A><H3>
readSocket</H3>
<PRE>
public int <B>readSocket</B>(int&nbsp;socketId,
                      java.nio.ByteBuffer&nbsp;dst)
               throws java.io.IOException</PRE>
<DL>
<DD>Return the bytes read.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>socketId</CODE> - 
<DT><B>Returns:</B><DD>number of bytes read
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="generatedSocketException(int, java.io.IOException)"><!-- --></A><H3>
generatedSocketException</H3>
<PRE>
public void <B>generatedSocketException</B>(int&nbsp;socketId,
                                     java.io.IOException&nbsp;ioe)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="writeSocket(int, java.nio.ByteBuffer)"><!-- --></A><H3>
writeSocket</H3>
<PRE>
public int <B>writeSocket</B>(int&nbsp;socketId,
                       java.nio.ByteBuffer&nbsp;src)
                throws java.io.IOException</PRE>
<DL>
<DD>Return the bytes written.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>socketId</CODE> - 
<DT><B>Returns:</B><DD>number of bytes written
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="close(int)"><!-- --></A><H3>
close</H3>
<PRE>
public void <B>close</B>(int&nbsp;socketId)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="shutdownOutput(int)"><!-- --></A><H3>
shutdownOutput</H3>
<PRE>
public void <B>shutdownOutput</B>(int&nbsp;socketId)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="registerEvent(org.mpisws.p2p.transport.peerreview.replay.EventCallback, short...)"><!-- --></A><H3>
registerEvent</H3>
<PRE>
public void <B>registerEvent</B>(<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/EventCallback.html" title="interface in org.mpisws.p2p.transport.peerreview.replay">EventCallback</A>&nbsp;callback,
                          short...&nbsp;eventType)</PRE>
<DL>
<DD>This binds specific event types to one of the handlers
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="registerEvent(org.mpisws.p2p.transport.peerreview.replay.EventCallback, short)"><!-- --></A><H3>
registerEvent</H3>
<PRE>
public void <B>registerEvent</B>(<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/EventCallback.html" title="interface in org.mpisws.p2p.transport.peerreview.replay">EventCallback</A>&nbsp;callback,
                          short&nbsp;eventType)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="makeProgress()"><!-- --></A><H3>
makeProgress</H3>
<PRE>
public boolean <B>makeProgress</B>()</PRE>
<DL>
<DD>This is called by the Audit protocol to make another replay step; it returns true
 if further calls are necessary, and false if the replay has finished. The idea
 is that we can stop calling this if there is more important work to do, e.g. 
 handle foreground requests
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/Verifier.html#makeProgress()">makeProgress</A></CODE> in interface <CODE><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/Verifier.html" title="interface in org.mpisws.p2p.transport.peerreview.replay">Verifier</A>&lt;<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html" title="type parameter in ReplayVerifier">Identifier</A>&gt;</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getNextEventTime()"><!-- --></A><H3>
getNextEventTime</H3>
<PRE>
public long <B>getNextEventTime</B>()</PRE>
<DL>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/Verifier.html#getNextEventTime()">getNextEventTime</A></CODE> in interface <CODE><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/Verifier.html" title="interface in org.mpisws.p2p.transport.peerreview.replay">Verifier</A>&lt;<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html" title="type parameter in ReplayVerifier">Identifier</A>&gt;</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isSuccess()"><!-- --></A><H3>
isSuccess</H3>
<PRE>
public boolean <B>isSuccess</B>()</PRE>
<DL>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/Verifier.html#isSuccess()">isSuccess</A></CODE> in interface <CODE><A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/Verifier.html" title="interface in org.mpisws.p2p.transport.peerreview.replay">Verifier</A>&lt;<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html" title="type parameter in ReplayVerifier">Identifier</A>&gt;</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="deserializeException(rice.p2p.commonapi.rawserialization.InputBuffer)"><!-- --></A><H3>
deserializeException</H3>
<PRE>
protected java.io.IOException <B>deserializeException</B>(<A HREF="../../../../../../../rice/p2p/commonapi/rawserialization/InputBuffer.html" title="interface in rice.p2p.commonapi.rawserialization">InputBuffer</A>&nbsp;nextEvent)
                                            throws java.io.IOException</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/ReplayVerifier.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
Rice Pastry API</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../../../org/mpisws/p2p/transport/peerreview/replay/playback/ReplaySocket.html" title="class in org.mpisws.p2p.transport.peerreview.replay.playback"><B>PREV CLASS</B></A>&nbsp;
&nbsp;NEXT CLASS</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../../../index.html?org/mpisws/p2p/transport/peerreview/replay/playback/ReplayVerifier.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="ReplayVerifier.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>
<i>Copyright &#169; 2001-2005 - Rice Pastry.</i>
</BODY>
</HTML>
