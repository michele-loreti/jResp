<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_51) on Tue Jun 25 15:13:42 CEST 2013 -->
<TITLE>
XMLReader (Rice Pastry - API Specifications)
</TITLE>

<META NAME="date" CONTENT="2013-06-25">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="XMLReader (Rice Pastry - API Specifications)";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/XMLReader.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
Rice Pastry API</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../rice/p2p/util/XMLParser.CharArrayBuffer.html" title="class in rice.p2p.util"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../rice/p2p/util/XMLWriter.html" title="class in rice.p2p.util"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?rice/p2p/util/XMLReader.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="XMLReader.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
rice.p2p.util</FONT>
<BR>
Class XMLReader</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>rice.p2p.util.XMLReader</B>
</PRE>
<HR>
<DL>
<DT><PRE>public class <B>XMLReader</B><DT>extends java.lang.Object</DL>
</PRE>

<P>
XMLReader is a utility class used by XMLObjectInputStreamm to perform the actual
 XML parsing.  This reader is based on the XML Pull-Parsing API, available online
 at http://www.xmlpull.org.  Any of the provided parser implementations will work 
 with this reader.
<P>

<P>
<DL>
<DT><B>Version:</B></DT>
  <DD>$Id: XMLReader.java 3613 2007-02-15 14:45:14Z jstewart $</DD>
<DT><B>Author:</B></DT>
  <DD>Alan Mislove</DD>
</DL>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../rice/p2p/util/XMLReader.html#eventType">eventType</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The cached type of the last event the parser saw</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;java.io.Reader</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../rice/p2p/util/XMLReader.html#in">in</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The actual reader which the parser uses</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;org.xmlpull.v1.XmlPullParser</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../rice/p2p/util/XMLReader.html#xpp">xpp</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The actual XML parser which we use</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../rice/p2p/util/XMLReader.html#XMLReader(java.io.Reader)">XMLReader</A></B>(java.io.Reader&nbsp;in)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructor which takes the provided reader and
 builds a new XML parser to read XML from the reader.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../rice/p2p/util/XMLReader.html#assertAttribute(java.lang.String, java.lang.String)">assertAttribute</A></B>(java.lang.String&nbsp;name,
                java.lang.String&nbsp;value)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Asserts that the given attribute exists and is equal to the given value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../rice/p2p/util/XMLReader.html#assertEndTag()">assertEndTag</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Asserts that a end tag was just read</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../rice/p2p/util/XMLReader.html#assertEndTag(java.lang.String)">assertEndTag</A></B>(java.lang.String&nbsp;name)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Asserts that the provided end tag was just read</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../rice/p2p/util/XMLReader.html#assertEvent(int)">assertEvent</A></B>(int&nbsp;type)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Asserts that the given event type just happened.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../rice/p2p/util/XMLReader.html#assertStartTag()">assertStartTag</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Asserts that a start tag was just read</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../rice/p2p/util/XMLReader.html#assertStartTag(java.lang.String)">assertStartTag</A></B>(java.lang.String&nbsp;name)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Asserts that the provided start tag was just read</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../rice/p2p/util/XMLReader.html#close()">close</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Method which closes the underlying reader, which will
 cause future step attempts to throw an IOException.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../rice/p2p/util/XMLReader.html#getAttribute(java.lang.String)">getAttribute</A></B>(java.lang.String&nbsp;name)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the value of the given attribute, or null if the
 attribute cannot be found.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../rice/p2p/util/XMLReader.html#getEndTag()">getEndTag</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the value of the current end tag</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../rice/p2p/util/XMLReader.html#getStartTag()">getStartTag</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the value of the current start tag</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../rice/p2p/util/XMLReader.html#isEndDocument()">isEndDocument</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns whether or not a end document just happened</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../rice/p2p/util/XMLReader.html#isEndTag()">isEndTag</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns whether or not a end tag just happened</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../rice/p2p/util/XMLReader.html#isStartDocument()">isStartDocument</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns whether or not a start document just happened</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../rice/p2p/util/XMLReader.html#isStartTag()">isStartTag</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns whether or not a start tag just happened</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../rice/p2p/util/XMLReader.html#isText()">isText</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns whether or not a end tag just happened</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../rice/p2p/util/XMLReader.html#readBase64()">readBase64</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Method which writes a sequence of base64 encoded bytes to the output stream</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../rice/p2p/util/XMLReader.html#readEndTag()">readEndTag</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Asserts that a end tag will be read next.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../rice/p2p/util/XMLReader.html#readEndTag(java.lang.String)">readEndTag</A></B>(java.lang.String&nbsp;name)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Asserts that the provided end tag will be read next.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../rice/p2p/util/XMLReader.html#readHeader()">readHeader</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Method which reads the header from the reader.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../rice/p2p/util/XMLReader.html#readStartTag()">readStartTag</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Asserts that a start tag will be read next.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../rice/p2p/util/XMLReader.html#readStartTag(java.lang.String)">readStartTag</A></B>(java.lang.String&nbsp;name)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Asserts that the provided start tag will be read next.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../rice/p2p/util/XMLReader.html#step()">step</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Advances the parser one step, skipping whitespace</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="in"><!-- --></A><H3>
in</H3>
<PRE>
protected java.io.Reader <B>in</B></PRE>
<DL>
<DD>The actual reader which the parser uses
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="xpp"><!-- --></A><H3>
xpp</H3>
<PRE>
protected org.xmlpull.v1.XmlPullParser <B>xpp</B></PRE>
<DL>
<DD>The actual XML parser which we use
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="eventType"><!-- --></A><H3>
eventType</H3>
<PRE>
protected int <B>eventType</B></PRE>
<DL>
<DD>The cached type of the last event the parser saw
<P>
<DL>
</DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="XMLReader(java.io.Reader)"><!-- --></A><H3>
XMLReader</H3>
<PRE>
public <B>XMLReader</B>(java.io.Reader&nbsp;in)
          throws java.io.IOException</PRE>
<DL>
<DD>Constructor which takes the provided reader and
 builds a new XML parser to read XML from the reader.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>in</CODE> - The reader to base this XML reader off of
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - If an error occurs</DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="close()"><!-- --></A><H3>
close</H3>
<PRE>
public void <B>close</B>()
           throws java.io.IOException</PRE>
<DL>
<DD>Method which closes the underlying reader, which will
 cause future step attempts to throw an IOException.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - If an error occurs</DL>
</DD>
</DL>
<HR>

<A NAME="readBase64()"><!-- --></A><H3>
readBase64</H3>
<PRE>
public byte[] <B>readBase64</B>()
                  throws java.io.IOException</PRE>
<DL>
<DD>Method which writes a sequence of base64 encoded bytes to the output stream
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>bytes</CODE> - The bytes to write
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="readHeader()"><!-- --></A><H3>
readHeader</H3>
<PRE>
public void <B>readHeader</B>()
                throws java.io.IOException</PRE>
<DL>
<DD>Method which reads the header from the reader.  If an
 invalid header is found, and IOException is thrown.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - If an error occurs</DL>
</DD>
</DL>
<HR>

<A NAME="assertEvent(int)"><!-- --></A><H3>
assertEvent</H3>
<PRE>
protected void <B>assertEvent</B>(int&nbsp;type)
                    throws java.io.IOException</PRE>
<DL>
<DD>Asserts that the given event type just happened.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - If a the assertion failed</DL>
</DD>
</DL>
<HR>

<A NAME="assertStartTag()"><!-- --></A><H3>
assertStartTag</H3>
<PRE>
public void <B>assertStartTag</B>()
                    throws java.io.IOException</PRE>
<DL>
<DD>Asserts that a start tag was just read
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - If a the assertion failed</DL>
</DD>
</DL>
<HR>

<A NAME="assertEndTag()"><!-- --></A><H3>
assertEndTag</H3>
<PRE>
public void <B>assertEndTag</B>()
                  throws java.io.IOException</PRE>
<DL>
<DD>Asserts that a end tag was just read
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - If a the assertion failed</DL>
</DD>
</DL>
<HR>

<A NAME="assertStartTag(java.lang.String)"><!-- --></A><H3>
assertStartTag</H3>
<PRE>
public void <B>assertStartTag</B>(java.lang.String&nbsp;name)
                    throws java.io.IOException</PRE>
<DL>
<DD>Asserts that the provided start tag was just read
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - The name of the start tag
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - If a the assertion failed</DL>
</DD>
</DL>
<HR>

<A NAME="assertEndTag(java.lang.String)"><!-- --></A><H3>
assertEndTag</H3>
<PRE>
public void <B>assertEndTag</B>(java.lang.String&nbsp;name)
                  throws java.io.IOException</PRE>
<DL>
<DD>Asserts that the provided end tag was just read
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - The name of the end tag
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - If a the assertion failed</DL>
</DD>
</DL>
<HR>

<A NAME="readStartTag()"><!-- --></A><H3>
readStartTag</H3>
<PRE>
public void <B>readStartTag</B>()
                  throws java.io.IOException</PRE>
<DL>
<DD>Asserts that a start tag will be read next.  Causes a step() 
 to be called.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - If a the assertion failed</DL>
</DD>
</DL>
<HR>

<A NAME="readEndTag()"><!-- --></A><H3>
readEndTag</H3>
<PRE>
public void <B>readEndTag</B>()
                throws java.io.IOException</PRE>
<DL>
<DD>Asserts that a end tag will be read next.  Causes a step() 
 to be called.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - If a the assertion failed</DL>
</DD>
</DL>
<HR>

<A NAME="readStartTag(java.lang.String)"><!-- --></A><H3>
readStartTag</H3>
<PRE>
public void <B>readStartTag</B>(java.lang.String&nbsp;name)
                  throws java.io.IOException</PRE>
<DL>
<DD>Asserts that the provided start tag will be read next.  Causes a step() 
 to be called.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - If a the assertion failed</DL>
</DD>
</DL>
<HR>

<A NAME="readEndTag(java.lang.String)"><!-- --></A><H3>
readEndTag</H3>
<PRE>
public void <B>readEndTag</B>(java.lang.String&nbsp;name)
                throws java.io.IOException</PRE>
<DL>
<DD>Asserts that the provided end tag will be read next.  Causes a step() 
 to be called.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - If a the assertion failed</DL>
</DD>
</DL>
<HR>

<A NAME="assertAttribute(java.lang.String, java.lang.String)"><!-- --></A><H3>
assertAttribute</H3>
<PRE>
public void <B>assertAttribute</B>(java.lang.String&nbsp;name,
                            java.lang.String&nbsp;value)
                     throws java.io.IOException</PRE>
<DL>
<DD>Asserts that the given attribute exists and is equal to the given value.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - If a the assertion failed</DL>
</DD>
</DL>
<HR>

<A NAME="step()"><!-- --></A><H3>
step</H3>
<PRE>
public void <B>step</B>()
          throws java.io.IOException</PRE>
<DL>
<DD>Advances the parser one step, skipping whitespace
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - If an error occurs</DL>
</DD>
</DL>
<HR>

<A NAME="isStartDocument()"><!-- --></A><H3>
isStartDocument</H3>
<PRE>
public boolean <B>isStartDocument</B>()</PRE>
<DL>
<DD>Returns whether or not a start document just happened
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Whether or not a start doucment just happened</DL>
</DD>
</DL>
<HR>

<A NAME="isEndDocument()"><!-- --></A><H3>
isEndDocument</H3>
<PRE>
public boolean <B>isEndDocument</B>()</PRE>
<DL>
<DD>Returns whether or not a end document just happened
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Whether or not a end doucment just happened</DL>
</DD>
</DL>
<HR>

<A NAME="isStartTag()"><!-- --></A><H3>
isStartTag</H3>
<PRE>
public boolean <B>isStartTag</B>()</PRE>
<DL>
<DD>Returns whether or not a start tag just happened
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Whether or not a start tag just happened</DL>
</DD>
</DL>
<HR>

<A NAME="isEndTag()"><!-- --></A><H3>
isEndTag</H3>
<PRE>
public boolean <B>isEndTag</B>()</PRE>
<DL>
<DD>Returns whether or not a end tag just happened
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Whether or not a end tag just happened</DL>
</DD>
</DL>
<HR>

<A NAME="isText()"><!-- --></A><H3>
isText</H3>
<PRE>
public boolean <B>isText</B>()</PRE>
<DL>
<DD>Returns whether or not a end tag just happened
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Whether or not a end tag just happened</DL>
</DD>
</DL>
<HR>

<A NAME="getAttribute(java.lang.String)"><!-- --></A><H3>
getAttribute</H3>
<PRE>
public java.lang.String <B>getAttribute</B>(java.lang.String&nbsp;name)
                              throws java.io.IOException</PRE>
<DL>
<DD>Returns the value of the given attribute, or null if the
 attribute cannot be found.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>The corresponding value, or null
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - If the current event is not a start tag</DL>
</DD>
</DL>
<HR>

<A NAME="getStartTag()"><!-- --></A><H3>
getStartTag</H3>
<PRE>
public java.lang.String <B>getStartTag</B>()
                             throws java.io.IOException</PRE>
<DL>
<DD>Returns the value of the current start tag
<P>
<DD><DL>

<DT><B>Returns:</B><DD>The start tag value
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - If the current event is not a start tag</DL>
</DD>
</DL>
<HR>

<A NAME="getEndTag()"><!-- --></A><H3>
getEndTag</H3>
<PRE>
public java.lang.String <B>getEndTag</B>()
                           throws java.io.IOException</PRE>
<DL>
<DD>Returns the value of the current end tag
<P>
<DD><DL>

<DT><B>Returns:</B><DD>The end tag value
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - If the current event is not a end tag</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/XMLReader.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
Rice Pastry API</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../rice/p2p/util/XMLParser.CharArrayBuffer.html" title="class in rice.p2p.util"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../rice/p2p/util/XMLWriter.html" title="class in rice.p2p.util"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?rice/p2p/util/XMLReader.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="XMLReader.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>
<i>Copyright &#169; 2001-2005 - Rice Pastry.</i>
</BODY>
</HTML>
